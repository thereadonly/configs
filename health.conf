# Prometheus, Grafana and Nginx setup is done and SSL cert deployed by Let's Encrypt.
# Nginx follows top down approach while parsing config.
# So, Let's lookup prometheus first and then grafana.
# TODO: In future, Let's not expose prometheus to the public.
# Author: sDK
# License: AGPL v3
server {
    server_name health.thereadonly.com;

    location /prometheus/ {
	rewrite ^/prometheus(/.*)$ $1 break;
        proxy_pass http://localhost:9090/graph;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /grafana/ {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        proxy_pass http://localhost:3000; # Obviously, Grafana needs to the upfront server
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/health.thereadonly.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/health.thereadonly.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = health.thereadonly.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name health.thereadonly.com;
    return 404; # managed by Certbot


}
